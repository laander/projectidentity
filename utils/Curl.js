// Generated by CoffeeScript 1.3.1
(function() {
  var Curl, curl;

  curl = require("curlrequest");

  Curl = {
    scrape: function(req, callback) {
      var curl_request, key, options, value, _ref;
      console.log("Scraping started " + req.options.url);
      options = {
        headers: [],
        location: true,
        include: true,
        timeout: 10,
        retries: 3
      };
      if (req.options.url != null) {
        options.url = req.options.url;
      }
      if (req.options.method != null) {
        options.method = req.options.method;
      }
      if (req.options.encoding != null) {
        options.encoding = req.options.encoding;
      }
      if ((req.data != null) && req.options.method === "POST") {
        options.data = "";
        _ref = req.data;
        for (key in _ref) {
          value = _ref[key];
          options.data += key + '=' + encodeURIComponent(value) + '&';
        }
        options.headers["Content-Type"] = "application/x-www-form-urlencoded";
        options.headers['Content-Length'] = options.data.length;
      }
      if (req.options.cookies != null) {
        options.cookie = req.options.cookies;
      }
      return curl_request = curl.request(options, function(err, raw_res) {
        var location, res, status_code;
        res = {};
        if (raw_res != null) {
          raw_res = raw_res.split("\r\n\r\n");
          res.head = raw_res.shift();
          res.body = raw_res.join();
          status_code = /\d\d\d/.exec(res.head);
          if (status_code != null) {
            res.status_code = status_code[0];
          }
          location = /^Location: (.+)/m.exec(res.head);
          if (location != null) {
            res.location = location[1];
          }
          options.cpr = req.cpr;
        }
        return callback(options, res, err);
      });
    },
    getCookie: function(url, callback) {
      var curl_request, options;
      options = {
        url: url,
        include: true
      };
      return curl_request = curl.request(options, function(err, res) {
        var cookie, head, regex, result;
        res = res.split("\r\n\r\n");
        head = res.shift();
        regex = /^Set-Cookie: (.*?);/m;
        result = head.match(regex);
        cookie = result[1];
        console.log("Cookie: " + cookie);
        return callback(cookie);
      });
    }
  };

  module.exports = Curl;

}).call(this);
