// Generated by CoffeeScript 1.3.1
(function() {
  var addToProgressbar, countCprList, setInputData;

  this.cprList = [];

  this.countCompleted = 0;

  this.dob = 0;

  window.socket = io.connect();

  $(document).ready(function() {
    $(".accordion").accordion({
      autoHeight: false,
      collapsible: true
    });
    $("button").button();
    $(".progressbar").progressbar({
      value: 0
    });
    $("#sex").buttonset();
    $("#next").click(function() {
      $("#next").button("disable");
      $("#loading").fadeIn();
      socket.emit("next");
      return console.log("next was clicked");
    });
    return $("#findValidNumbers").click(setInputData);
  });

  socket.socket.on('error', function(reason) {
    return console.error('Unable to connect Socket.IO', reason);
  });

  socket.on('correctCpr', function(data) {
    addToProgressbar();
    $('#correctCpr').fadeIn();
    return $("#correctCpr .content").append(data.cpr + ',').effect('highlight', {
      color: '#E78F08'
    });
  });

  socket.on('incorrectCpr', function(data) {
    addToProgressbar();
    return console.log(data.cpr);
  });

  socket.on('lookupFailed', function(data) {
    addToProgressbar();
    $("#failedCpr").fadeIn();
    return $("#failedCpr .content").append(data.cpr + ', ').effect('highlight', {
      color: '#E78F08'
    });
  });

  socket.on("waitForClient", function(data) {
    console.log("server waiting for client: " + data["name"]);
    $("#loading").fadeOut();
    return $("#next").button("enable");
  });

  socket.on("renderPreparationResponse", function(data) {
    var body;
    console.log(data);
    $(".accordion div").html("");
    $("#requestUrl").html(data.req.url);
    if (data.res.body != null) {
      body = $(data.res.body.replace(/<script[\d\D]*?>[\d\D]*?<\/script>/g, ""), "body");
      if (body.find(data.domTarget).length === 0) {
        body.appendTo("#responseBody");
      } else {
        body.find(data.domTarget).appendTo("#responseBody");
      }
    }
    if (data.res.head != null) {
      $("#responseHeader").html(data.res.head.replace(/\n/g, "<br />"));
    }
    $("#errors").html(JSON.stringify(data.err));
    $("#requestHeader").html(JSON.stringify(data.req));
    return $(".accordion").accordion("resize");
  });

  countCprList = function() {
    return this.cprList.length;
  };

  addToProgressbar = function() {
    countCompleted++;
    return $(".progressbar.completed").progressbar("option", "value", countCompleted / countCprList() * 100);
  };

  setInputData = function() {
    var dob, firstName, gender, lastName,
      _this = this;
    dob = $("input[name=dob]").val();
    firstName = $("input[name=firstName]").val();
    lastName = $("input[name=lastName]").val();
    gender = $("input[name=gender]:checked").val();
    return generateCombinations(dob, firstName, lastName, gender, function(cprList) {
      _this.cprList = cprList;
      socket.emit("setInputData", {
        dob: dob,
        firstName: firstName,
        lastName: lastName,
        cprList: cprList
      });
      $("#processFb, #stopTimer, #progressbars, #controllerContainer, #inputData").fadeToggle();
      return $("#inputData .content").html("FÃ¸dselsdag: " + dob + "<br> Fornavn: " + firstName + "<br> Efternavn: " + lastName).fadeIn();
    });
  };

}).call(this);
