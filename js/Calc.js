// Generated by CoffeeScript 1.3.1
(function() {
  var count, recursiveSearch, validateCPR;

  count = 0;

  this.cprList = [];

  this.generateCombinations = function(dob, firstName, lastName, gender, setCprList_cb) {
    var options;
    options = [];
    options[0] = [0, 1, 2, 3, 4, 9];
    options[1] = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];
    options[2] = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];
    options[3] = (gender === "male" ? [1, 3, 5, 7, 9] : [0, 2, 4, 6, 8]);
    return recursiveSearch(options, 0, 0, function() {
      return setCprList_cb(cprList);
    });
  };

  recursiveSearch = function(options, number, depth, callback) {
    var cpr, i;
    count++;
    number = number || "";
    depth = depth || 0;
    i = 0;
    while (i < options[depth].length) {
      if (depth + 1 < options.length) {
        recursiveSearch(options, number + options[depth][i], depth + 1, callback);
      } else {
        cpr = number + options[depth][i];
        if (validateCPR(cpr)) {
          cprList.push(cpr);
        }
      }
      i++;
    }
    count--;
    if (count === 0) {
      return callback();
    }
  };

  validateCPR = function(cpr) {
    var factors, fullcpr, i, sum;
    fullcpr = dob + cpr;
    sum = 0;
    factors = [4, 3, 2, 7, 6, 5, 4, 3, 2, 1];
    i = 0;
    while (i < 10) {
      sum += fullcpr.substring(i, i + 1) * factors[i];
      i++;
    }
    if ((sum % 11) !== 0) {
      return false;
    } else {
      return true;
    }
  };

}).call(this);
