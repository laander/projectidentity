// Generated by CoffeeScript 1.3.1
(function() {
  var $, Curl, Recipe,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  Recipe = require("../Recipe.js");

  Curl = require("../utils/Curl.js");

  $ = require("jquery");

  this.Dummy = (function(_super) {
    var self;

    __extends(Dummy, _super);

    Dummy.name = 'Dummy';

    function Dummy(inputData, socket) {
      this.inputData = inputData;
      this.socket = socket;
      this.domTarget = "div.indhold";
      this.counter = 0;
      this.req = {
        data: {
          cprok: "on",
          email: "test@ofir.dk",
          password1: "test1234",
          password2: "test1234",
          fornavn: inputData["firstName"],
          efternavn: inputData["lastName"],
          cpr: inputData["birthday"] + "" + inputData["cprList"][0]
        },
        options: {
          url: "http://dummyrep.konscript.net/testNumberBig.php",
          method: "POST",
          encoding: "UTF-8"
        }
      };
    }

    self = Dummy;

    Dummy.prototype.prepareRequest = function(callback) {
      var preparationData;
      console.log("Prepare request started");
      preparationData = {};
      this.step1 = function(callback) {
        var waitingForCookies;
        waitingForCookies = 2;
        Curl.getCookie("https://www.oister.dk/Mobil/Shopflow/Basket/?product=152&product=458", function(cookie) {
          self.cookieA = cookie;
          return waitingForCookies--;
        });
        Curl.getCookie("https://www.oister.dk/selfcare/servlet/LoginFramePassive", function(cookie) {
          self.cookieB = cookie;
          return waitingForCookies--;
        });
        return setInterval(function() {
          if (waitingForCookies === 0) {
            clearInterval(this);
            return callback("done");
          }
        }, 400);
      };
      this.step2 = function(res, callback) {
        var req;
        req = {
          options: {
            url: 'https://www.oister.dk/Mobil/Shopflow/Vaelg-nummer/',
            cookies: self.cookieA
          }
        };
        return Curl.scrape(req, self.renderPreparationResponse);
      };
      this.step3 = function(prev_res, callback) {
        var req;
        preparationData.viewstate = $(prev_res.body).find('#__VIEWSTATE').val();
        preparationData.eventvalidation = $(prev_res.body).find('#__EVENTVALIDATION').val();
        preparationData.phonenumber = $(prev_res.body).find('#number-grid table input[name=numbers]:first').val();
        preparationData.phonenumber_clean = preparationData.phonenumber.substr(0, 8);
        req = {
          "options": {
            "url": 'https://www.oister.dk/Mobil/Shopflow/ConfirmPage/?numb=' + preparationData.phonenumber_clean,
            "cookies": self.cookieA
          }
        };
        return Curl.scrape(req, self.renderPreparationResponse);
      };
      this.step4 = function(prev_res, callback) {
        return callback(prev_res);
      };
      this.step5 = function(prev_res, callback) {
        var req;
        console.log(self.cookieB);
        req = {
          "options": {
            "url": 'https://www.oister.dk/selfcare/servlet/VoisterSavePersonalIDLookup;' + self.cookieB.toLowerCase(),
            "method": "POST",
            "cookies": self.cookieB
          },
          "data": {
            JSESSION: self.cookieB.toLowerCase(),
            account_type: 0,
            users__personal_id: self.inputData["birthday"] + "" + self.inputData["cprList"][0],
            users__first_name: self.inputData.firstName,
            users__last_name: self.inputData.lastName
          }
        };
        return Curl.scrape(req, self.renderPreparationResponse);
      };
      this.step6 = function(prev_res, callback) {
        var req;
        req = {
          "options": {
            "url": 'https://www.oister.dk/selfcare/servlet/VoisterInitSubscription?product=POST_PAID',
            "method": "POST",
            "cookies": self.cookieB
          },
          "data": {
            "oister_customer": "false"
          }
        };
        return Curl.scrape(req, self.renderPreparationResponse);
      };
      self = this;
      return this.step1(function(res) {
        return self.waitForClient("step1", res, function(res) {
          return self.step2(res, function(res) {
            return self.waitForClient("step2", res, function(res) {
              return self.step3(res, function(res) {
                return self.waitForClient("step3", res, function(res) {
                  return self.step4(res, function(res) {
                    return self.waitForClient("step4", res, function(res) {
                      return self.step5(res, function(res) {
                        return self.waitForClient("step5", res, function(res) {
                          console.log("Preperation finished");
                          return callback();
                        });
                      });
                    });
                  });
                });
              });
            });
          });
        });
      });
    };

    Dummy.prototype.getResponse = function(req, res, callback) {
      if (res.body.indexOf("fantastisk") !== -1) {
        return callback(req.data.cpr, "success");
      } else {
        return callback(req.data.cpr, "error");
      }
    };

    return Dummy;

  })(Recipe.Recipe);

}).call(this);
